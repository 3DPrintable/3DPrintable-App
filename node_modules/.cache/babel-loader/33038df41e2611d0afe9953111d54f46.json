{"ast":null,"code":"export var n6=new Intl.NumberFormat(\"en-us\",{style:\"decimal\",minimumFractionDigits:0,maximumFractionDigits:6});export var n4=new Intl.NumberFormat(\"en-us\",{style:\"decimal\",minimumFractionDigits:0,maximumFractionDigits:4});export var c2=new Intl.NumberFormat(\"en-us\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2});/**\n * Returns a string of form \"abc...xyz\"\n * @param {string} str string to string\n * @param {number} n number of chars to keep at front/end\n * @returns {string}\n */export var getEllipsisTxt=function getEllipsisTxt(str){var n=arguments.length>1&&arguments[1]!==undefined?arguments[1]:6;if(str){return\"\".concat(str.substr(0,n),\"...\").concat(str.substr(str.length-n,str.length));}return\"\";};export var tokenValue=function tokenValue(value,decimals){return decimals?value/Math.pow(10,decimals):value;};/**\n * Return a formatted string with the symbol at the end\n * @param {number} value integer value\n * @param {number} decimals number of decimals\n * @param {string} symbol token symbol\n * @returns {string}\n */export var tokenValueTxt=function tokenValueTxt(value,decimals,symbol){return\"\".concat(n4.format(tokenValue(value,decimals)),\" \").concat(symbol);};","map":{"version":3,"sources":["/Users/bryce_palichuk/Documents/GitHub/3DPrintable_Organization/3DPrintable-App/src/helpers/formatters.js"],"names":["n6","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","n4","c2","currency","getEllipsisTxt","str","n","substr","length","tokenValue","value","decimals","Math","pow","tokenValueTxt","symbol","format"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,EAAE,CAAG,GAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAC/CC,KAAK,CAAE,SADwC,CAE/CC,qBAAqB,CAAE,CAFwB,CAG/CC,qBAAqB,CAAE,CAHwB,CAA/B,CAAX,CAKP,MAAO,IAAMC,CAAAA,EAAE,CAAG,GAAIL,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAC/CC,KAAK,CAAE,SADwC,CAE/CC,qBAAqB,CAAE,CAFwB,CAG/CC,qBAAqB,CAAE,CAHwB,CAA/B,CAAX,CAMP,MAAO,IAAME,CAAAA,EAAE,CAAG,GAAIN,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAC/CC,KAAK,CAAE,UADwC,CAE/CK,QAAQ,CAAE,KAFqC,CAG/CJ,qBAAqB,CAAE,CAHwB,CAI/CC,qBAAqB,CAAE,CAJwB,CAA/B,CAAX,CAOP;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAgB,IAAVC,CAAAA,CAAU,2DAAN,CAAM,CAC5C,GAAID,GAAJ,CAAS,CACP,gBAAUA,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAcD,CAAd,CAAV,eAAgCD,GAAG,CAACE,MAAJ,CAAWF,GAAG,CAACG,MAAJ,CAAaF,CAAxB,CAA2BD,GAAG,CAACG,MAA/B,CAAhC,EACD,CACD,MAAO,EAAP,CACD,CALM,CAOP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAQC,QAAR,QAAsBA,CAAAA,QAAQ,CAAGD,KAAK,CAAGE,IAAI,CAACC,GAAL,CAAS,EAAT,CAAaF,QAAb,CAAX,CAAoCD,KAAlE,EAAnB,CAEP;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,KAAD,CAAQC,QAAR,CAAkBI,MAAlB,kBAAgCd,EAAE,CAACe,MAAH,CAAUP,UAAU,CAACC,KAAD,CAAQC,QAAR,CAApB,CAAhC,aAA0EI,MAA1E,GAAtB","sourcesContent":["export const n6 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\nexport const n4 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});\n\nexport const c2 = new Intl.NumberFormat(\"en-us\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\n/**\n * Returns a string of form \"abc...xyz\"\n * @param {string} str string to string\n * @param {number} n number of chars to keep at front/end\n * @returns {string}\n */\nexport const getEllipsisTxt = (str, n = 6) => {\n  if (str) {\n    return `${str.substr(0, n)}...${str.substr(str.length - n, str.length)}`;\n  }\n  return \"\";\n};\n\nexport const tokenValue = (value, decimals) => (decimals ? value / Math.pow(10, decimals) : value);\n\n/**\n * Return a formatted string with the symbol at the end\n * @param {number} value integer value\n * @param {number} decimals number of decimals\n * @param {string} symbol token symbol\n * @returns {string}\n */\nexport const tokenValueTxt = (value, decimals, symbol) => `${n4.format(tokenValue(value, decimals))} ${symbol}`;\n"]},"metadata":{},"sourceType":"module"}