{"ast":null,"code":"import _slicedToArray from\"/Users/ethor/Documents/GitHub/DAPPS/3DPrintable-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useMoralis}from\"react-moralis\";import MoralisDappContext from\"./context\";import{jsx as _jsx}from\"react/jsx-runtime\";function MoralisDappProvider(_ref){var children=_ref.children;var _useMoralis=useMoralis(),web3=_useMoralis.web3,Moralis=_useMoralis.Moralis,user=_useMoralis.user;var _useState=useState(),_useState2=_slicedToArray(_useState,2),walletAddress=_useState2[0],setWalletAddress=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),chainId=_useState4[0],setChainId=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),contractABI=_useState6[0],setContractABI=_useState6[1];//Smart Contract ABI here\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),marketAddress=_useState8[0],setMarketAddress=_useState8[1];//Smart Contract Address Here\nuseEffect(function(){Moralis.onChainChanged(function(chain){setChainId(chain);});Moralis.onAccountsChanged(function(address){setWalletAddress(address[0]);});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(function(){var _web3$givenProvider;return setChainId((_web3$givenProvider=web3.givenProvider)===null||_web3$givenProvider===void 0?void 0:_web3$givenProvider.chainId);});useEffect(function(){var _web3$givenProvider2;return setWalletAddress(((_web3$givenProvider2=web3.givenProvider)===null||_web3$givenProvider2===void 0?void 0:_web3$givenProvider2.selectedAddress)||(user===null||user===void 0?void 0:user.get(\"ethAddress\")));},[web3,user]);return/*#__PURE__*/_jsx(MoralisDappContext.Provider,{value:{walletAddress:walletAddress,chainId:chainId,marketAddress:marketAddress,setMarketAddress:setMarketAddress,contractABI:contractABI,setContractABI:setContractABI},children:children});}function useMoralisDapp(){var context=React.useContext(MoralisDappContext);if(context===undefined){throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");}return context;}export{MoralisDappProvider,useMoralisDapp};","map":{"version":3,"sources":["/Users/ethor/Documents/GitHub/DAPPS/3DPrintable-App/src/providers/MoralisDappProvider/MoralisDappProvider.js"],"names":["React","useEffect","useState","useMoralis","MoralisDappContext","MoralisDappProvider","children","web3","Moralis","user","walletAddress","setWalletAddress","chainId","setChainId","contractABI","setContractABI","marketAddress","setMarketAddress","onChainChanged","chain","onAccountsChanged","address","givenProvider","selectedAddress","get","useMoralisDapp","context","useContext","undefined","Error"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,WAA/B,C,2CAEA,QAASC,CAAAA,mBAAT,MAA2C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACzC,gBAAgCH,UAAU,EAA1C,CAAQI,IAAR,aAAQA,IAAR,CAAcC,OAAd,aAAcA,OAAd,CAAuBC,IAAvB,aAAuBA,IAAvB,CACA,cAA0CP,QAAQ,EAAlD,wCAAOQ,aAAP,eAAsBC,gBAAtB,eACA,eAA8BT,QAAQ,EAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eACA,eAAsCX,QAAQ,CAAC,EAAD,CAA9C,yCAAOY,WAAP,eAAoBC,cAApB,eAAoD;AACpD,eAA0Cb,QAAQ,CAAC,EAAD,CAAlD,yCAAOc,aAAP,eAAsBC,gBAAtB,eAAwD;AAExDhB,SAAS,CAAC,UAAM,CACdO,OAAO,CAACU,cAAR,CAAuB,SAAUC,KAAV,CAAiB,CACtCN,UAAU,CAACM,KAAD,CAAV,CACD,CAFD,EAIAX,OAAO,CAACY,iBAAR,CAA0B,SAAUC,OAAV,CAAmB,CAC3CV,gBAAgB,CAACU,OAAO,CAAC,CAAD,CAAR,CAAhB,CACD,CAFD,EAGA;AACD,CATQ,CASN,EATM,CAAT,CAWA;AACApB,SAAS,CAAC,yCAAMY,CAAAA,UAAU,sBAACN,IAAI,CAACe,aAAN,8CAAC,oBAAoBV,OAArB,CAAhB,EAAD,CAAT,CACAX,SAAS,CACP,0CAAMU,CAAAA,gBAAgB,CAAC,uBAAAJ,IAAI,CAACe,aAAL,oEAAoBC,eAApB,IAAuCd,IAAvC,SAAuCA,IAAvC,iBAAuCA,IAAI,CAAEe,GAAN,CAAU,YAAV,CAAvC,CAAD,CAAtB,EADO,CAEP,CAACjB,IAAD,CAAOE,IAAP,CAFO,CAAT,CAKA,mBACE,KAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAEC,aAAa,CAAbA,aAAF,CAAiBE,OAAO,CAAPA,OAAjB,CAA0BI,aAAa,CAAbA,aAA1B,CAAyCC,gBAAgB,CAAhBA,gBAAzC,CAA2DH,WAAW,CAAXA,WAA3D,CAAwEC,cAAc,CAAdA,cAAxE,CAApC,UACGT,QADH,EADF,CAKD,CAED,QAASmB,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,OAAO,CAAG1B,KAAK,CAAC2B,UAAN,CAAiBvB,kBAAjB,CAAhB,CACA,GAAIsB,OAAO,GAAKE,SAAhB,CAA2B,CACzB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,0DAAV,CAAN,CACD,CACD,MAAOH,CAAAA,OAAP,CACD,CAED,OAASrB,mBAAT,CAA8BoB,cAA9B","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport MoralisDappContext from \"./context\";\n\nfunction MoralisDappProvider({ children }) {\n  const { web3, Moralis, user } = useMoralis();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chainId, setChainId] = useState();       \n  const [contractABI, setContractABI] = useState(\"\"); //Smart Contract ABI here\n  const [marketAddress, setMarketAddress] = useState(\"\"); //Smart Contract Address Here\n\n  useEffect(() => {\n    Moralis.onChainChanged(function (chain) {\n      setChainId(chain);\n    });\n\n    Moralis.onAccountsChanged(function (address) {\n      setWalletAddress(address[0]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setChainId(web3.givenProvider?.chainId));\n  useEffect(\n    () => setWalletAddress(web3.givenProvider?.selectedAddress || user?.get(\"ethAddress\")),\n    [web3, user]\n  );\n\n  return (\n    <MoralisDappContext.Provider value={{ walletAddress, chainId, marketAddress, setMarketAddress, contractABI, setContractABI }}>\n      {children}\n    </MoralisDappContext.Provider>\n  );\n}\n\nfunction useMoralisDapp() {\n  const context = React.useContext(MoralisDappContext);\n  if (context === undefined) {\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\n  }\n  return context;\n}\n\nexport { MoralisDappProvider, useMoralisDapp };\n"]},"metadata":{},"sourceType":"module"}